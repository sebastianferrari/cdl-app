{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./app/app.component.html","webpack:///./app/app.component.ts","webpack:///./app/app.module.ts","webpack:///./app/dashboard/dashboard.component.css","webpack:///./app/dashboard/dashboard.component.html","webpack:///./app/dashboard/dashboard.component.ts","webpack:///./app/dashboard/list.component.css","webpack:///./app/dashboard/list.component.html","webpack:///./app/dashboard/list.component.ts","webpack:///./app/shared/dataService.ts","webpack:///./environments/environment.ts","webpack:///./main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'licenses',\n  templateUrl: \"./app.component.html\",\n  styles: []\n})\nexport class AppComponent {\n  title = 'Licenses List';\n}\n","import { BrowserModule } from \"@angular/platform-browser\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\n\r\nimport { AppComponent } from \"./app.component\";\r\nimport { LicensesList } from \"./dashboard/list.component\";\r\nimport { Dashboard } from \"./dashboard/dashboard.component\";\r\nimport { DataService } from \"./shared/dataService\";\r\n\r\nimport { RouterModule } from \"@angular/router\";\r\n\r\nlet routes = [\r\n  { path: \"\", component: Dashboard }//,\r\n  //{ path: \"/checkout\", component: Checkout }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LicensesList,\r\n    Dashboard\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    RouterModule.forRoot(routes, {\r\n      useHash: true,\r\n      enableTracing: false // for debugging of the routes\r\n    })\r\n  ],\r\n  providers: [\r\n    DataService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\\r\\n\"","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-12\\\">\\r\\n    <h3>{{ title }}</h3>\\r\\n    <licenses-list></licenses-list>\\r\\n  </div>\\r\\n</div>\"","﻿import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"dashboard\",\r\n  templateUrl: \"dashboard.component.html\",\r\n  styleUrls: [ \"dashboard.component.css\" ]\r\n})\r\nexport class Dashboard {\r\n\r\n}","module.exports = \".license-info .license-fullname {\\r\\n    font-size: large;\\r\\n    font-weight: bold;\\r\\n}\"","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"license-info col-md-4\\\" *ngFor=\\\"let l of licenses\\\">\\r\\n    <div class=\\\"card bg-light p-1 m-1\\\">\\r\\n      <div class=\\\"license-fullname\\\">{{ l.lastName }} - {{ l.firstName }}</div>\\r\\n      <ul>\\r\\n        <li><strong>ID</strong>: {{ l.id }}</li>\\r\\n        <li><strong>CLASS</strong>: {{ l.class }}</li>\\r\\n        <li><strong>STATE</strong>: {{ l.state }}</li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","﻿import { Component, OnInit } from '@angular/core';\r\nimport { DataService } from '../shared/dataService';\r\nimport { License } from '../shared/license';\r\n\r\n@Component({\r\n  selector: \"licenses-list\",\r\n  templateUrl: \"list.component.html\",\r\n  styleUrls: [ \"list.component.css\" ]\r\n})\r\n\r\nexport class LicensesList implements OnInit {\r\n\r\n  constructor(private data: DataService) {\r\n    this.licenses = data.licenses;\r\n  }\r\n\r\n  public licenses: License[] = [];\r\n\r\n  ngOnInit(): void {\r\n    this.data.loadLicenses()\r\n      .subscribe(success => {\r\n        if (success) {\r\n          this.licenses = this.data.licenses;\r\n        }\r\n      });\r\n  }\r\n}","﻿import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { License } from \"./license\";\r\n\r\n@Injectable()\r\nexport class DataService {\r\n\r\n  constructor(private http: HttpClient) {\r\n\r\n  }\r\n\r\n  private token: string = \"\";\r\n  private tokenExpiration: Date;\r\n\r\n  public licenses: License[] = [];\r\n\r\n  public get loginRequired(): boolean {\r\n    return this.token.length == 0 || this.tokenExpiration > new Date();\r\n  }\r\n\r\n  loadLicenses(): Observable<boolean> {\r\n    return this.http.get(\"/api/licenses\")\r\n      .pipe(\r\n        map((data: any[]) => {\r\n          this.licenses = data;\r\n          return true;\r\n        }));\r\n  }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}